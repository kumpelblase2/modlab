<!DOCTYPE html>
<html>
  <head>
    <title>ModLab</title>

    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">


    <!--
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.

        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

    <!--STYLES-->
    <link rel="stylesheet" href="/styles/bootstrap-theme.css">
    <link rel="stylesheet" href="/styles/bootstrap.css">
    <link rel="stylesheet" href="/styles/importer.css">
    <!--STYLES END-->
  </head>

  <body>
    <%- include navigation.ejs %>

    <!-- Default home page -->
    <link type="text/css" href='http://sailsjs.org/styles/fonts.css' rel='stylesheet'/>
    <style>
      /* Styles included inline since you'll probably be deleting this page anyway */
      .container {
        width: 80%;
        max-width: 1200px;
        margin: auto;
      }

      div.header {
        -webkit-transition: 6s;
        -moz-transition: 6s;
        -o-transition: 6s;
        transition: 6s;
        background: rgba(4, 36, 41, 0.89) url(http://sailsjs.org/images/img_sailsShadow.png) no-repeat 42% bottom;
        padding: 100px 0 65px;
      }

      .header h1#main-title {
        color: #fff;
        font-weight: 300;
        font-size: 2.5em;
      }

      div.main.container {
        padding: 50px 0;
      }

      div.default-page {
        min-width: 1200px;
      }
    </style>
    <script type="text/javascript">
      setTimeout(function sunrise () {
        document.getElementsByClassName('header')[0].style.backgroundColor = '#118798';
      }, 0);
    </script>

    <div class="default-page">
      <div class="header">
        <h1 id="main-title" class="container"><%= __('ModLab') %></h1>
      </div>
      <div id="content" class="main container clearfix">
        <%- body %>
      </div>
    </div>
    <!--
        Client-side Templates
        ========================

        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
        that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).

        To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different template engine (handlebars, jade, dust, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
    -->

    <!--TEMPLATES-->
    <script type="text/javascript" src="/jst.js"></script>
    <!--TEMPLATES END-->


    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, files in your `assets/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.

      To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:

          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->

    <!--SCRIPTS-->
    <script src="/js/dependencies/sails.io.js"></script>
    <script src="/js/dependencies/jquery-2.1.1.min.js"></script>
    <script src="/js/dependencies/underscore.js"></script>
    <script src="/js/bootstrap.js"></script>
    <!--SCRIPTS END-->
  </body>
</html>
